openapi: 3.0.3
info:
  title: Matrix Rooms Search
  version: '0.x.x'
  description: 'Matrix Rooms Search service'
  license:
    name: AGPL-3.0
    url: https://www.gnu.org/licenses/agpl-3.0.txt

externalDocs:
  description: Git repo
  url: https://gitlab.com/etke.cc/mrs/api
servers:
  - url: http://localhost:8080
    description: local
paths:
  /.well-known/matrix/server:
    get:
      tags:
        - Matrix S2S API
      summary: Matrix server delegation
      description: The delegated server information.
      operationId: matrix_server_delegation
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  m.server:
                    type: string
                    description: The server name to delegate server-server communications to, with optional port
                    example: 'example.com:443'
  /.well-known/matrix/client:
    get:
      tags:
        - Matrix CS API
      summary: Matrix client delegation
      description: The delegated server information intended for clients
      operationId: matrix_client_delegation
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  m.homeserver:
                    type: object
                    properties:
                      base_url:
                        type: string
                        description: The server URL to use with clients
                        example: 'https://example.com'
  /.well-known/matrix/support:
    get:
      tags:
        - Matrix CS API
      summary: Matrix support details
      description: Homeserver Admin Contact and Support page
      operationId: matrix_support
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  support_page:
                    type: string
                    description: The support page URL
                    example: 'https://example.com/contact'
                  contacts:
                    type: array
                    items:
                      type: object
                      properties:
                        matrix_id:
                          type: string
                          description: Matrix ID of the contact
                          example: '@admin:example.com'
                        email_address:
                          type: string
                          description: Email address of the contact
                          example: 'admin@example.com'
                        role:
                          type: string
                          description: Role of the contact
                          example: 'm.role.admin'
  /_matrix/client/versions:
    get:
      tags:
        - Matrix CS API
      summary: Gets the versions of the specification supported by the server.
      description: The versions are made-up, because the whole point of that endpoint is to be a workaround for services like matrix.to
      operationId: matrix_client_versions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      type: string
                      example: 'v2.0'
                  unstable_features:
                    type: object
                    properties:
                      uk.half-shot.msc1929:
                        type: boolean
                        description: Made-up MSC1929 unstable feature
                        example: true
                      im.nheko.summary.msc3266:
                        type: boolean
                        description: Made-up MSC3266 unstable feature
                        example: true
  /_matrix/federation/v1/version:
    get:
      tags:
        - Matrix S2S API
      summary: matrix server name and version
      description: Get the implementation name and version of this homeserver.
      operationId: matrix_server_version
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  server:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The server implementation name
                        example: 'MatrixRoomsSearch'
                      version:
                        type: string
                        description: The server implementation's version
                        example: 'v0.0.0'
  /_matrix/key/v2/server:
    get:
      tags:
        - Matrix S2S API
      summary: matrix server's published signing keys
      description: Gets the homeserver’s published signing keys
      operationId: matrix_server_key
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  server_name:
                    type: string
                    description: DNS name of the homeserver.
                    example: 'example.com'
                  valid_until_ts:
                    type: integer
                    description: POSIX timestamp in milliseconds when the list of valid keys should be refreshed
                    example: 1698164427133
                  verify_keys:
                    type: object
                    additionalProperties: { }
                  old_verify_keys:
                    type: object
                    additionalProperties: { }
                  signatures:
                    type: object
                    additionalProperties: { }
  /_matrix/federation/v1/query/directory:
    get:
      tags:
        - Matrix S2S API
      summary: Performs a query to get the mapped room ID and list of resident homeservers in the room for a given room alias
      description: "Performs a query to get the mapped room ID and list of resident homeservers in the room for a given room alias. Homeservers should only query room aliases that belong to the target server (identified by the DNS Name in the alias). Servers may wish to cache the response to this query to avoid requesting the information too often."
      operationId: matrix_server_query_directory
      parameters:
        - name: room_alias
          in: query
          description: room alias
          required: true
          schema:
            type: string
            example: '#alias:example.com'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  room_id:
                    type: string
                    description: room id
                    example: '!random:example.com'
                  servers:
                    type: array
                    items:
                      type: string
                      description: server name
                      example: example.com
        '401':
          description: unauthorized
        '404':
          description: room not found
        '500':
          description: json marshaling failed
      security:
        - matrix:
  /_matrix/client/r0/directory/room/{room_alias}:
    get:
      tags:
        - Matrix CS API
      summary: Requests that the server resolve a room alias to a room ID.
      description: "The server will check indexed rooms to resolve the alias if the domain part of the alias does not correspond to the server’s own domain."
      operationId: matrix_server_client_query_directory
      parameters:
        - name: room_alias
          in: path
          description: room alias
          required: true
          schema:
            type: string
            example: '#alias:example.com'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  room_id:
                    type: string
                    description: room id
                    example: '!random:example.com'
                  servers:
                    type: array
                    items:
                      type: string
                      description: server name
                      example: example.com
        '400':
          description: invalid room alias
        '404':
          description: room not found
        '500':
          description: json marshaling failed
  /_matrix/client/v3/directory/room/{room_alias}:
    get:
      tags:
        - Matrix CS API
      summary: Requests that the server resolve a room alias to a room ID.
      description: "The server will check indexed rooms to resolve the alias if the domain part of the alias does not correspond to the server’s own domain."
      operationId: matrix_server_client_query_directory
      parameters:
        - name: room_alias
          in: path
          description: room alias
          required: true
          schema:
            type: string
            example: '#alias:example.com'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  room_id:
                    type: string
                    description: room id
                    example: '!random:example.com'
                  servers:
                    type: array
                    items:
                      type: string
                      description: server name
                      example: example.com
        '400':
          description: invalid room alias
        '404':
          description: room not found
        '500':
          description: json marshaling failed
  /_matrix/client/r0/directory/list/room/{room_id}:
    get:
      tags:
        - Matrix CS API
      summary: Gets the visibility of a given room on the server’s public room directory.
      description: "Visibility is always 'public' for the rooms known to MRS, otherwise 404 is returned"
      operationId: matrix_server_client_query_directory
      parameters:
        - name: room_id
          in: path
          description: room id
          required: true
          schema:
            type: string
            example: '!roomID:example.com'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  visibility:
                    type: string
                    description: always public
                    example: public
        '404':
          description: room not found
        '500':
          description: json marshaling failed
  /_matrix/client/v3/directory/list/room/{room_id}:
    get:
      tags:
        - Matrix CS API
      summary: Gets the visibility of a given room on the server’s public room directory.
      description: "Visibility is always 'public' for the rooms known to MRS, otherwise 404 is returned"
      operationId: matrix_server_client_query_directory
      parameters:
        - name: room_id
          in: path
          description: room id
          required: true
          schema:
            type: string
            example: '!roomID:example.com'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  visibility:
                    type: string
                    description: always public
                    example: public
        '404':
          description: room not found
        '500':
          description: json marshaling failed
  /_matrix/client/v1/summary/{room_id_or_alias}:
    get:
      tags:
        - Matrix CS API
      summary: A summary of a room by id or alias
      description: "MSC3266 - The API returns a summary of the given room, if it is known by MRS and publicly accessible"
      operationId: matrix_server_client_query_room_summary_stable
      parameters:
        - name: room_id_or_alias
          in: path
          description: room ID or alias
          required: true
          schema:
            type: string
            example: '#alias:example.com'
        - name: via
          in: query
          description: list of servers to use for resolving the room alias
          required: false
          schema:
            type: array
            items:
              type: string
              example: 'example.com'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  documentation:
                    type: string
                    example: "https://github.com/deepbluev7/matrix-doc/blob/room-summaries/proposals/3266-room-summary.md#rationale-and-description-of-response-fields"
        '400':
          description: invalid room alias
        '404':
          description: room not found
        '500':
          description: json marshaling failed
  /_matrix/client/unstable/im.nheko.summary/summary/{room_id_or_alias}:
    get:
      tags:
        - Matrix CS API
      summary: MSC3266 - fetch a summary of a room by id or alias
      description: "MSC3266 - The API returns a summary of the given room, if it is known by MRS and publicly accessible"
      operationId: matrix_server_client_query_room_summary_correct
      parameters:
        - name: room_id_or_alias
          in: path
          description: room ID or alias
          required: true
          schema:
            type: string
            example: '#alias:example.com'
        - name: via
          in: query
          description: list of servers to use for resolving the room alias
          required: false
          schema:
            type: array
            items:
              type: string
              example: 'example.com'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  documentation:
                    type: string
                    example: "https://github.com/deepbluev7/matrix-doc/blob/room-summaries/proposals/3266-room-summary.md#rationale-and-description-of-response-fields"
        '400':
          description: invalid room alias
        '404':
          description: room not found
        '500':
          description: json marshaling failed
  /_matrix/client/unstable/im.nheko.summary/rooms/{room_id_or_alias}/summary:
    get:
      tags:
        - Matrix CS API
      summary: MSC3266 - fetch a summary of a room by id or alias
      description: "MSC3266 - The API returns a summary of the given room, if it is known by MRS and publicly accessible"
      operationId: matrix_server_client_query_room_summary_incorrect
      parameters:
        - name: room_id_or_alias
          in: path
          description: room ID or alias
          required: true
          schema:
            type: string
            example: '#alias:example.com'
        - name: via
          in: query
          description: list of servers to use for resolving the room alias
          required: false
          schema:
            type: array
            items:
              type: string
              example: 'example.com'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  documentation:
                    type: string
                    example: "https://github.com/deepbluev7/matrix-doc/blob/room-summaries/proposals/3266-room-summary.md#rationale-and-description-of-response-fields"
        '400':
          description: invalid room alias
        '404':
          description: room not found
        '500':
          description: json marshaling failed
  /_matrix/media/r0/thumbnail/{server_name}/{media_id}:
    get:
      tags:
        - Matrix CS API
      summary: Get room avatar
      operationId: avatar
      parameters:
        - name: server_name
          in: path
          description: server name to get avatar from
          required: true
          schema:
            type: string
            example: example.com
        - name: media_id
          in: path
          description: media ID of the avatar
          required: true
          schema:
            type: string
            example: tiHQGISntgETFKWJvQWUhUBw
        - name: height
          in: query
          description: desired avatar height
          schema:
            type: int
            example: 40
        - name: width
          in: query
          description: desired avatar width
          schema:
            type: int
            example: 40
        - name: method
          in: query
          description: "one of: [crop, scale]."
          schema:
            type: string
            example: "crop"
      responses:
        '200':
          description: successful operation
          content:
            'image/jpeg':
              schema:
                type: string
                format: binary
            'image/png':
              schema:
                type: string
                format: binary
            'image/webp':
              schema:
                type: string
                format: binary
            'image/...':
              schema:
                type: string
                format: binary
        '204':
          description: no results found.
  /_matrix/media/v3/thumbnail/{server_name}/{media_id}:
    get:
      tags:
        - Matrix CS API
      summary: Get room avatar
      operationId: avatar
      parameters:
        - name: server_name
          in: path
          description: server name to get avatar from
          required: true
          schema:
            type: string
            example: example.com
        - name: media_id
          in: path
          description: media ID of the avatar
          required: true
          schema:
            type: string
            example: tiHQGISntgETFKWJvQWUhUBw
        - name: height
          in: query
          description: desired avatar height
          schema:
            type: int
            example: 40
        - name: width
          in: query
          description: desired avatar width
          schema:
            type: int
            example: 40
        - name: method
          in: query
          description: "one of: [crop, scale]."
          schema:
            type: string
            example: "crop"
      responses:
        '200':
          description: successful operation
          content:
            'image/jpeg':
              schema:
                type: string
                format: binary
            'image/png':
              schema:
                type: string
                format: binary
            'image/webp':
              schema:
                type: string
                format: binary
            'image/...':
              schema:
                type: string
                format: binary
        '204':
          description: no results found.
  /_matrix/federation/v1/publicRooms:
    get:
      tags:
        - Matrix S2S API
      summary: the same search, but through Matrix Server-Server API
      description: Gets all the public rooms indexed by MRS. Use https://spec.matrix.org/v1.8/server-server-api/#public-room-directory for details
      operationId: matrix_server_publicrooms_get
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  documentation:
                    type: string
                    example: "https://spec.matrix.org/v1.8/server-server-api/#get_matrixfederationv1publicrooms"
        '401':
          description: unauthorized
        '500':
          description: internal server error
      security:
        - matrix:
    post:
      tags:
        - Matrix S2S API
      summary: the same search, but through Matrix Server-Server API
      description: Gets all the public rooms indexed by MRS. Use https://spec.matrix.org/v1.8/server-server-api/#public-room-directory for details
      operationId: matrix_server_publicrooms_post
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  documentation:
                    type: string
                    example: "https://spec.matrix.org/v1.8/server-server-api/#post_matrixfederationv1publicrooms"
        '401':
          description: unauthorized
        '500':
          description: internal server error
      security:
        - matrix:
  /_health:
    get:
      tags:
        - public
      summary: Healthcheck endpoint
      description: check that service is alive
      operationId: health
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: ok
                    example: 'ok'
  /stats:
    get:
      tags:
        - public
      summary: Statistics
      description: returns instance statistics
      operationId: stats
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stats'
  /catalog/servers:
    get:
      tags:
        - public
      summary: Get servers catalog
      description: Returns a list of all servers with rooms counts
      operationId: catalog_servers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  server_name:
                    type: integer
                    description: rooms count
                    example: 100
  /discover/bulk:
    post:
      tags:
        - public
      summary: Add new servers in bulk
      operationId: addServerBulk
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: server name / base domain
                example: example.com
      responses:
        '202':
          description: payload accepted
        '401':
          description: unauthorized (provided credentials are invalid)
        '500':
          description: something is wrong, check the logs
      security:
        - discovery:
  /discover/{server_name}:
    post:
      tags:
        - public
      summary: Add a new server
      description: Add a new server. Without auth requests limited to 1 rps, with auth there is no such limitation
      operationId: addServer
      parameters:
        - name: server_name
          in: path
          description: server name,domain
          required: true
          schema:
            type: string
            example: 'example.com'
      responses:
        '201':
          description: server has been added
        '208':
          description: server already discovered
        '401':
          description: unauthorized (provided credentials are invalid)
        '429':
          description: too many requests, slow down.
        '500':
          description: something is wrong, check the logs
  /discover/msc1929/{server_name}:
    post:
      tags:
        - public
      summary: Verify the MSC1929 contacts of a server
      description: Verify the MSC1929 support file of a server
      operationId: verifyMSC1929
      parameters:
        - name: server_name
          in: path
          description: server name,domain
          required: true
          schema:
            type: string
            example: 'example.com'
      responses:
        '204':
          description: the support file is valid and not empty
        '400':
          description: the support file is invalid or empty
      security:
        - { }
        - discovery:
  /avatar/{server_name}/{media_id}:
    get:
      tags:
        - public
      summary: Get room avatar
      operationId: avatar
      parameters:
        - name: server_name
          in: path
          description: server name to get avatar from
          required: true
          schema:
            type: string
            example: example.com
        - name: media_id
          in: path
          description: media ID of the avatar
          required: true
          schema:
            type: string
            example: tiHQGISntgETFKWJvQWUhUBw
      responses:
        '200':
          description: successful operation
          content:
            'image/jpeg':
              schema:
                type: string
                format: binary
            'image/png':
              schema:
                type: string
                format: binary
            'image/webp':
              schema:
                type: string
                format: binary
            'image/...':
              schema:
                type: string
                format: binary
        '204':
          description: no results found.
  /search:
    get:
      tags:
        - public
      summary: Search something! (query params)
      description: Search for matrix rooms
      operationId: search_query
      parameters:
        - name: q
          in: query
          description: search query
          required: true
          schema:
            type: string
        - name: l
          in: query
          description: limit
          required: false
          schema:
            type: integer
            default: 10
        - name: o
          in: query
          description: offset
          required: false
          schema:
            type: integer
            default: 0
        - name: s
          in: query
          description: sort by, comma-separated list of fields. `-` prefix means descending
          required: true
          schema:
            type: string
            default: -members,-_score
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry'
        '204':
          description: no results found.
        '401':
          description: unauthorized (if optional search auth is enabled)
  /search/{q}/{l}/{o}/{s}:
    get:
      tags:
        - public
      summary: Search something! (path params)
      description: Search for matrix rooms
      operationId: search_path
      parameters:
        - name: q
          in: path
          description: search query
          required: true
          schema:
            type: string
        - name: l
          in: path
          description: limit
          required: false
          schema:
            type: integer
            default: 10
        - name: o
          in: path
          description: offset
          required: false
          schema:
            type: integer
            default: 0
        - name: s
          in: path
          description: sort by, comma-separated list of fields. `-` prefix means descending
          required: true
          schema:
            type: string
            default: -_score,-members
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry'
        '204':
          description: no results found.
        '401':
          description: unauthorized (if optional search auth is enabled)
  /mod/report/{room_id}:
    post:
      tags:
        - public
        - moderation
      summary: Report a room
      operationId: mod_report
      parameters:
        - name: room_id
          in: path
          description: room ID
          required: true
          schema:
            type: string
            example: '!randomString:example.com'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Report reason
                  example: CSAM
                no_msc1929:
                  type: boolean
                  description: Do not share the report with the owner of the room's homeserver, even if email is present in MSC1929 contacts
                  example: true
      responses:
        '202':
          description: successful operation
        '429':
          description: too many requests
  /mod/list:
    get:
      tags:
        - private
        - moderation
      description: List all banned rooms
      operationId: mod_list
      responses:
        '204':
          description: no banned rooms yet
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: banned matrix room ID
                  example: '!randomString:example.com'
      security:
        - moderation:
        - automaticToken:
  /mod/list/{server_name}:
    get:
      tags:
        - private
        - moderation
      parameters:
        - name: server_name
          in: path
          description: server name
          required: true
          schema:
            type: string
            example: 'example.com'
      description: List banned rooms of specific server
      operationId: mod_list_server
      responses:
        '204':
          description: no banned rooms yet
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  description: banned matrix room ID
                  example: '!randomString:example.com'
      security:
        - moderation:
        - automaticToken:
  /mod/ban/{room_id}:
    get:
      tags:
        - private
        - moderation
      description: Ban a room (erase from search index)
      operationId: mod_ban
      parameters:
        - name: room_id
          in: path
          description: room ID
          required: true
          schema:
            type: string
            example: '!randomString:example.com'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: response message
                    example: 'the room has been banned'
      security:
        - moderation:
        - automaticToken:
  /mod/unban/{room_id}:
    get:
      tags:
        - private
        - moderation
      description: Unban a room (it won't be available in the search index until next reindex!)
      operationId: mod_unban
      parameters:
        - name: room_id
          in: path
          description: room ID
          required: true
          schema:
            type: string
            example: '!randomString:example.com'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: response message
                    example: 'the room has been unbanned'
      security:
        - moderation:
        - automaticToken:
  /metrics:
    get:
      tags:
        - private
      summary: Prometheus metrics
      description: Get Prometheus metrics of the MRS instance
      operationId: metrics
      responses:
        '200':
          description: successful operation
      security:
        - metrics:
  /-/status:
    get:
      tags:
        - private
      description: Get full status of the MRS
      operationId: admin_status
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
      security:
        - admin:
  /-/servers:
    get:
      tags:
        - private
      description: Get YAML of the discovered (alive) matrix servers. Useful to adjust config file
      operationId: admin_servers
      responses:
        '200':
          description: successful operation
          content:
            application/x-yaml:
              schema:
                type: array
                items:
                  type: string
                  description: human-readable server name (matrix domain)
                  example: 'example.com'
      security:
        - admin:
  /-/discover:
    post:
      tags:
        - private
      description: Run matrix servers discovery process in background. If process already in progress, request will be ignored
      operationId: admin_discover
      responses:
        '201':
          description: request acknowledged
      security:
        - admin:
  /-/parse:
    post:
      tags:
        - private
      description: Runs matrix rooms parsing process in background. If process already in progress, request will be ignored
      operationId: admin_parse
      responses:
        '201':
          description: request acknowledged
      security:
        - admin:
  /-/reindex:
    post:
      tags:
        - private
      description: Runs parsed matrix rooms ingestion process in background. If process already in progress, request will be ignored
      operationId: admin_reindex
      responses:
        '201':
          description: request acknowledged
      security:
        - admin:
  /-/full:
    post:
      tags:
        - private
      description: Runs matrix servers discovery, then rooms parsing and ingestion in background. Useful when starting a fresh instance without any data. If process already in progress, request will be ignored
      operationId: admin_full
      responses:
        '201':
          description: request acknowledged
      security:
        - admin:

components:
  schemas:
    Entry:
      type: object
      properties:
        id:
          type: string
          description: room ID
          example: '!example:example.com'
        alias:
          type: string
          description: room alias
          example: '#example:example.com'
        name:
          type: string
          description: room name
          example: 'Example Room'
        topic:
          type: string
          description: room topic
          example: 'This is my topic'
        avatar:
          type: string
          description: MXC URI of room avatar
          example: 'mxc://example.com/sENrPlXsrqeJworlfatgzHmu'
        avatar_url:
          type: string
          description: HTTP URL of room avatar (use this one for web)
          example: 'https://matrix.example.com/_matrix/media/v3/download/example.com/sENrPlXsrqeJworlfatgzHmu'
        members:
          type: integer
          description: members count
          example: 9
        server:
          type: string
          description: server name
          example: example.com
        language:
          type: string
          description: 'ISO6391 language code (e.g. en, de, fr) OR `-` if there is not enough text in room name and topic to determine language'
          example: en
    Stats:
      type: object
      properties:
        servers:
          type: integer
          description: Count of all discovered online servers
          example: 3230
        rooms:
          type: integer
          description: Count of parsed rooms
          example: 3230
        details:
          type: object
          properties:
            servers:
              type: object
              properties:
                online:
                  type: integer
                  description: amount of discovered online & federatable matrix servers
                  example: 23
                indexable:
                  type: integer
                  description: amount of discovered online & federatable matrix servers that public public rooms directory over federation
                  example: 23
            rooms:
              type: object
              properties:
                parsed:
                  type: integer
                  description: amount of all parsed rooms from online servers
                  example: 123
                indexed:
                  type: integer
                  description: amount of all indexed (searchable) rooms from online servers
                  example: 123
        timeline:
          type: array
          description: stats timeline
          items:
            type: object
            properties:
              date:
                type: string
                description: YYYY-MM-DD
                example: 2006-01-02
              details:
                type: object
                properties:
                  servers:
                    type: object
                    properties:
                      online:
                        type: integer
                        description: amount of discovered online & federatable matrix servers
                        example: 23
                      indexable:
                        type: integer
                        description: amount of discovered online & federatable matrix servers that public public rooms directory over federation
                        example: 23
                  rooms:
                    type: object
                    properties:
                      parsed:
                        type: integer
                        description: amount of all parsed rooms from online servers
                        example: 123
                      indexed:
                        type: integer
                        description: amount of all indexed (searchable) rooms from online servers
                        example: 123
    Status:
      type: object
      properties:
        servers:
          type: object
          properties:
            online:
              type: integer
              description: amount of discovered online & federatable matrix servers
              example: 23
            indexable:
              type: integer
              description: amount of discovered online & federatable matrix servers that public public rooms directory over federation
              example: 23
            blocked:
              type: integer
              description: amount of servers in blocklist
              example: 3
        rooms:
          type: object
          properties:
            parsed:
              type: integer
              description: amount of all parsed rooms from online servers
              example: 123
            indexed:
              type: integer
              description: amount of all indexed (searchable) rooms from online servers
              example: 123
            banned:
              type: integer
              description: amount of banned rooms
              example: 23
            reported:
              type: integer
              description: amount of reported rooms
              example: 43
        discovery:
          $ref: '#/components/schemas/ProcessStatus'
        parsing:
          $ref: '#/components/schemas/ProcessStatus'
        indexing:
          $ref: '#/components/schemas/ProcessStatus'
    ProcessStatus:
      type: object
      description: servers discovery info
      properties:
        started_at:
          type: string
          format: date-time
          description: start time of the process
          example: 2023-04-17T18:40:56Z
        finished_at:
          type: string
          format: date-time
          description: start time of the process
          example: 2023-04-17T18:40:56Z
  securitySchemes:
    admin:
      type: http
      scheme: basic
    metrics:
      type: http
      scheme: basic
    discovery:
      type: http
      scheme: basic
    moderation:
      type: http
      scheme: basic
    matrix:
      type: apiKey
      in: header
      name: Authorization
      scheme: Bearer
      bearerFormat: "X-Matrix"
    automaticToken:
      description: automatically generated token
      type: apiKey
      name: auth
      in: query
